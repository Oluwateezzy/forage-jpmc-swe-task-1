From 96e83f8cd770c343541f9775bb204ec14aefc7d8 Mon Sep 17 00:00:00 2001
From: Oluwatobiloba <oluwateezzy03@gmail.com>
Date: Thu, 5 Sep 2024 01:53:27 +0100
Subject: [PATCH 1/2] update

---
 .gitignore |  1 +
 client3.py | 10 +++++++---
 2 files changed, 8 insertions(+), 3 deletions(-)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..8fa5b33
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+env
\ No newline at end of file
diff --git a/client3.py b/client3.py
index 3fc09b7..2bd2d50 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b != 0:
+        return price_a / price_b
+    return
 
 
 # Main
@@ -52,8 +54,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
-- 
2.45.0


From 98161343677107a4caac867cb2d2eb9c6e1b99e4 Mon Sep 17 00:00:00 2001
From: Oluwatobiloba <oluwateezzy03@gmail.com>
Date: Thu, 5 Sep 2024 02:10:44 +0100
Subject: [PATCH 2/2] update

---
 0001-update.patch                  |  57 +++++++++++++++++++++++++++++
 __pycache__/client3.cpython-38.pyc | Bin 0 -> 1114 bytes
 client_test.py                     |   4 ++
 3 files changed, 61 insertions(+)
 create mode 100644 0001-update.patch
 create mode 100644 __pycache__/client3.cpython-38.pyc

diff --git a/0001-update.patch b/0001-update.patch
new file mode 100644
index 0000000..a8a0022
--- /dev/null
+++ b/0001-update.patch
@@ -0,0 +1,57 @@
+From 96e83f8cd770c343541f9775bb204ec14aefc7d8 Mon Sep 17 00:00:00 2001
+From: Oluwatobiloba <oluwateezzy03@gmail.com>
+Date: Thu, 5 Sep 2024 01:53:27 +0100
+Subject: [PATCH] update
+
+---
+ .gitignore |  1 +
+ client3.py | 10 +++++++---
+ 2 files changed, 8 insertions(+), 3 deletions(-)
+ create mode 100644 .gitignore
+
+diff --git a/.gitignore b/.gitignore
+new file mode 100644
+index 0000000..8fa5b33
+--- /dev/null
++++ b/.gitignore
+@@ -0,0 +1 @@
++env
+\ No newline at end of file
+diff --git a/client3.py b/client3.py
+index 3fc09b7..2bd2d50 100644
+--- a/client3.py
++++ b/client3.py
+@@ -35,14 +35,16 @@ def getDataPoint(quote):
+     stock = quote['stock']
+     bid_price = float(quote['top_bid']['price'])
+     ask_price = float(quote['top_ask']['price'])
+-    price = bid_price
++    price = (bid_price + ask_price) / 2
+     return stock, bid_price, ask_price, price
+ 
+ 
+ def getRatio(price_a, price_b):
+     """ Get ratio of price_a and price_b """
+     """ ------------- Update this function ------------- """
+-    return 1
++    if price_b != 0:
++        return price_a / price_b
++    return
+ 
+ 
+ # Main
+@@ -52,8 +54,10 @@ if __name__ == "__main__":
+         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+ 
+         """ ----------- Update to get the ratio --------------- """
++        prices = {}
+         for quote in quotes:
+             stock, bid_price, ask_price, price = getDataPoint(quote)
++            prices[stock] = price
+             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+ 
+-        print("Ratio %s" % getRatio(price, price))
++        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
+-- 
+2.45.0
+
diff --git a/__pycache__/client3.cpython-38.pyc b/__pycache__/client3.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..11036c0c72acd83924d6a39c231907aef655030e
GIT binary patch
literal 1114
zcmYjQOK%%D5GMDfl`Xl7<41%51zR9!Rn(D-9vT>Fnl?&$GxC5BC0Z;fab&NxTFNBV
zG^%`3|3dHbF@K_m{EP6~Q|>wClv&C)!o@r}8qRz(I%+o82p&b=4*#ta@_%J~deBE6
zBAGYHB$2crd?hKT-VS&u10Knc$1;-fKZGYTku{VxNM$+-^nXx?HHa5<L3`wnzxX<k
zWdp*~=5hm~<!3;b^nzT_3%YDolHbS)--H_&yU%Yz0yh`*_lR%tZN9^IVHY-G>pp>7
zvJP9Y4Lh(qjCRO^QgSvy?;6x#Q?9oO@<y91g3G&}q%TOP`40OahqEtEteqTmyM-Ev
z;zSvHaBu(Ke)nt&`qfXl{PFMe{5>UPfOLIg)FPxuNai83IpWbK=hRkO&?Yj(_vm@x
z?daML=fOPOB{IHE&Z9Z4ta&tyu$pA{1AD5KoDP7AqG0v}SP39OvOh&J1;eaj$54V6
z79*GxR!mf0TIOP7)nMdmR!y>gE?qp)`2be7Fr#+?*4Lpf9u`X2PVC~dsj{Fex2xk1
zvQ>N?V^^xKT6<0OI*Jbux<>}I>8fJ-Qdrf`3)L6h9+(ln*BvS?j$!X~G9K)im#}9s
z$=-L}L6JjgzrQ<q<r>FedsysKUo2)ce$B#^w(x6E-9+D@D(31`dPN@GEmY=I(ov{e
zbJT8=7YHx{7S6t8zk+3mN3NI}GT%iem?-6?-e<ZR+M#cx6Y$z)$d%If7c17lK$l{z
z&#Qdjpk)$d1nW$x-tf0sHWqoAWwWoIRR~IU$1q{p*NEZ49rG>2-o5nCpw^kCJ{!il
z@aJD1xv=;6NvF-DQ=>|rXslF?`NmWiMc%)w0awmgo~&#hKRbH-{5MArJwn$dlwu57
z=As-&=wi%q431_l#^FlCYgbunm_<#XbP0}VEUb$(2<Z|(d&3i7qtPig<~KoCe{Wrl
x#!ufbQE5K`s9FZSLh1e(_q2cq+vqZ%Bdah<!wA20Ev=_Pi?T36Ukhm`_z31n7{vep

literal 0
HcmV?d00001

diff --git a/client_test.py b/client_test.py
index af2bf26..4537671 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+       self.assertEqual(getDataPoint(quote), (quote['stock'], float(quote['top_bid']['price']), float(quote['top_ask']['price']), (float(quote['top_bid']['price']) + float(quote['top_ask']['price'])) / 2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,6 +17,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+       self.assertEqual(getDataPoint(quote), (quote['stock'], float(quote['top_bid']['price']), float(quote['top_ask']['price']), (float(quote['top_bid']['price']) + float(quote['top_ask']['price'])) / 2))
 
 
   """ ------------ Add more unit tests ------------ """
-- 
2.45.0

